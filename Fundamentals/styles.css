
p#A{
    color: Red;
}

h2 {
    color: green;
}

a:link {
    color: blue;
  }
   
  a:visited {
    color: purple;
  }

   wrapper {
    margin: 0 auto;
    width:  600px;
    background: #ccc;
  }

  header, footer {
    padding: 11px;
    background: purple;
    color: #fff;
  }

   
  /* section{
    padding: 10px;
  } */

  /* Where the magic happens */

  #Box1{
    float: left;
    background: gold;
    width: 33.333%;
  
  }

  #Box2{
  float: left;
  background: brown;
  width: 33.333%;

  }

  #Box3{
    float: left;
    background: orange;
    width: 33.333%;

    
  }


footer {
  clear: both;
}

* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

img{
  display: block;
  float: left;
  padding: 12px;
  margin: 0 30px 10 px 0
}

.image{
 clear:both
}

section{
  background: #ccc;
  padding: 20px;
  margin: 10px;
  width: 400px

}

article{
  width: 100px;
  height: 100px;
  padding: 20px;
  margin: 10px
}

#rap article {
  float: left;
  background: aqua;
}

#country article{
  float: right;
  background: limegreen;
}

/* Helps to insure that the artiles stays in the grey box */
.clearfix:after {
  content: "";
  display: flow-root;
  clear: both;
  visibility: hidden;
  height: 0;
  line-height: 0;

}

/* positioning to give Fixed Properties of element */
 #pet, #car, #leather, #school {
  margin: 11px;
  padding: 20px;
  background: pink;
  width: 500px;
  background-image: url(https://media.giphy.com/media/26u42gAFROFb0VyCI/giphy.gif);

}

/* div{
  width: 100px;
  padding: 5px;
  border: 1px solid black
} */


#pet{
  position: relative;
  top: 20px;
  left: 50px;
  background: rosybrown;
}


#car{
  position: absolute;
  top: 0px;
  left: 0px;
  background:peru;
}

#school{
  position: fixed;
  top: 0px;
  right: 120px;
  background: blueviolet;
}

#leather{
  position: relative;

}

/* Z index 
 The more increase the z-index. The more the box will be on top.
*/


  .zindex, #x, #y, #z {
   position: relative;
   width: 50px;
   height: 50px;
   padding: 10px;
   border: 1px solid #000;

  }

   #x{
    top: 0;
    left: 0;
    z-index: 3;
    background: rgba(255,0,0,0.75);
  }

  #y{
    top: -25px;
    left: 25x;
    z-index: 2;
    background: pink;

  }

  #z{
    top: -50px;
    left: 50px;
    z-index: 1;
    background: gold;
  }


  /* Refering to id= flex-column */
  /*In this basic example, we float .col left and and apply widths to classes that define 2 different column types.*/
  .col {
    float: left;
}
.col-1 {
  width: 66.66%;
}
.col-2 {
  width: 33.33%;
}

/* Using inline for column */

.col {
  display: inline-block;
  width: 30%;
  vertical-align: top;
}
